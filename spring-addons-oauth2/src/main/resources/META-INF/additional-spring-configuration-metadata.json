{
  "groups": [
    {
      "name": "com.c4-soft.springaddons.security",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "description": "Configuration properties for OpenID resource-servers"
    },
    {
      "name": "com.c4-soft.springaddons.security.issuers.authorities",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$SimpleAuthoritiesMappingProperties",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$TokenIssuerProperties",
      "sourceMethod": "getAuthorities()"
    }
  ], "properties": [
    {
      "name": "com.c4-soft.springaddons.security.issuers",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$TokenIssuerProperties[]",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "description": "Configuration per token issuer. At leat one entry must be present"
    },
    {
      "name": "com.c4-soft.springaddons.security.issuers[0].location",
      "type": "java.net.URL",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$TokenIssuerProperties",
      "description": "Authorization-server \"issuer\" claim value"
    },
    {
      "name": "com.c4-soft.springaddons.security.issuers[0].authorities.claims",
      "type": "java.lang.String[]",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$SimpleAuthoritiesMappingProperties",
      "description": "List of claims to extract authorities from",
      "defaultValue": "{ \"realm_access.roles\" }"
    },
    {
      "name": "com.c4-soft.springaddons.security.issuers[0].authorities.prefix",
      "type": "java.lang.String",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$SimpleAuthoritiesMappingProperties",
      "description": "Prefix to mapped authorities",
      "defaultValue": ""
    },
    {
      "name": "com.c4-soft.springaddons.security.issuers[0].authorities.caze",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$Case",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$SimpleAuthoritiesMappingProperties",
      "description": "Case transformation to mapped authorities",
      "defaultValue": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$Case.UNCHANGED"
    },
    {
      "name": "com.c4_soft.springaddons.security.cors",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties[]",
      "description": "An array of CORS configuration properties (one per path). If empty, CORS is disabled.",
      "defaultValue": "{}"
    },
    {
      "name": "com.c4_soft.springaddons.security.cors[0].path",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String",
      "description": "Path to apply CORS configuration to",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors[0].allowed-methods",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of allowed methods",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors[0].allowed-headers",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of allowed headers",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors[0].exposed-headers",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of exposed headers",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.csrf",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties.Csrf",
      "description": "CSRF protection configuration. Default is disabled CSRF if statless-sessions is true and enabled CSRF with session repo otherwize",
      "defaultValue": "DEFAULT"
    },
    {
      "name": "com.c4_soft.springaddons.security.permit-all",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of opened URIs",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.redirect-to-togin-if-unauthorized-on-restricted-content",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "Should anonymous be redirected to login when trying to access restricted content (or shoud a 401 be returned)",
      "defaultValue": "false"
    },
    {
      "name": "com.c4_soft.springaddons.security.statless-sessions",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "If true, session creation policy will be STATELESS",
      "defaultValue": "true"
    },
    {
      "name": "com.c4-soft.springaddons.security.authorization-server-locations",
      "sourceType": "pf.cps.sample_api.security.SampleSecurityProperties",
      "type": "java.lang.String[]",
      "description": "An array of authorization-servers to validate JWT against (added to spring.security.oauth2.resourceserver.jwt.issuer-uri)"
    },
    {
      "name": "com.c4-soft.springaddons.security.json-token-string-charset",
      "sourceType": "pf.cps.sample_api.security.SampleSecurityProperties",
      "type": "java.lang.String",
      "defaultValue": "UTF-8",
      "description": "Charset name"
    }
  ]
}
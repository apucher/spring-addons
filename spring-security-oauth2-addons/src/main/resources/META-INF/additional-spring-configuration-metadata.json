{
  "properties": [
    {
      "name": "com.c4_soft.springaddons.security.authorities-claims",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.String[]",
      "description": "claims to map authorities from",
      "defaultValue": " { \"realm_access.roles\" };"
    },
    {
      "name": "com.c4_soft.springaddons.security.authorities-prefix",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.String",
      "description": "Prefix for authorities. For instance \"ROLE_\"",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.authorities-uppercase",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "Should authorities case forced to uppcase",
      "defaultValue": "false"
    },
    {
      "name": "com.c4_soft.springaddons.security.cors",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties[]",
      "description": "An array of CORS configuration properties (one per path)",
      "defaultValue": "{}"
    },
    {
      "name": "com.c4_soft.springaddons.security.cors.path",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String",
      "description": "Path to apply CORS configuration to",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors.allowed-methods",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of allowed methods",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors.allowed-headers",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of allowed headers",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors.exposed-headers",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties$CorsProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of exposed headers",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.cors.anonymous-enabled",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "Should anonymous be enabled",
      "defaultValue": "true"
    },
    {
      "name": "com.c4_soft.springaddons.security.csrf-enabled",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "Should CSRF be enabled",
      "defaultValue": "false"
    },
    {
      "name": "com.c4_soft.springaddons.security.permit-all",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.String[]",
      "description": "Comma separated list of opened URIs",
      "defaultValue": ""
    },
    {
      "name": "com.c4_soft.springaddons.security.redirect-to-togin-if-unauthorized-on-restricted-content",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "Should anonymous be redirected to login when trying to access restricted content (or shoud a 401 be returned)",
      "defaultValue": "false"
    },
    {
      "name": "com.c4_soft.springaddons.security.statless-sessions",
      "sourceType": "com.c4_soft.springaddons.security.oauth2.config.SpringAddonsSecurityProperties",
      "type": "java.lang.Boolean",
      "description": "If true, session creation policy will be STATELESS",
      "defaultValue": "true"
    }
  ]
}
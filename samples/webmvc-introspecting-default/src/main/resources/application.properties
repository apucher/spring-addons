spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=https://localhost:8443/realms/master/protocol/openid-connect/token/introspect
spring.security.oauth2.resourceserver.opaquetoken.client-id=spring-addons-confidential
spring.security.oauth2.resourceserver.opaquetoken.client-secret=change-me

server.shutdown=graceful

# shoud be set to where your authorization-server is
com.c4-soft.springaddons.security.issuers[0].location=https://localhost:8443/realms/master

# shoud be configured with a list of private-claims this authorization-server puts user roles into
# below is default Keycloak conf for a `spring-addons` client with client roles mapper enabled
com.c4-soft.springaddons.security.issuers[0].authorities.claims=realm_access.roles,resource_access.spring-addons-public.roles,resource_access.spring-addons-confidential.roles

# Fine-grained CORS configuration can be set per path as follow:
com.c4-soft.springaddons.security.cors[0].path=/sample/**
com.c4-soft.springaddons.security.cors[0].allowed-origins=https://localhost,https://localhost:8100,https://localhost:4200
com.c4-soft.springaddons.security.cors[0].allowedOrigins=*
com.c4-soft.springaddons.security.cors[0].allowedMethods=*
com.c4-soft.springaddons.security.cors[0].allowedHeaders=*
com.c4-soft.springaddons.security.cors[0].exposedHeaders=*

# CSRF is disabled by default. You can enable it with:
#com.c4-soft.springaddons.security.csrf-enabled=true

# You can configure public routes with:
com.c4-soft.springaddons.security.permit-all=/actuator/health/readiness,/actuator/health/liveness,/actuator/health/readiness,/actuator/health/liveness,/v3/api-docs,/v3/api-docs/**,/swagger-ui/**,/swagger-ui.html

# By default, a 401 is returned to unauthorized users (missing or invalid authentication)
# To redirect to login page instead (you'll have to provide additional configuration in web-security)
#com.c4-soft.springaddons.security.redirect-to-login-if-unauthorized-on-restricted-content=true

# By default, session management is set to "stateless" (client state is in the JWT). To enable sessions:
#com.c4-soft.springaddons.security.statless-sessions=false

spring.lifecycle.timeout-per-shutdown-phase=30s

logging.level.root=INFO
logging.level.com.c4_soft.springaddons=DEBUG
logging.level.org.springframework.security.web.csrf=DEBUG